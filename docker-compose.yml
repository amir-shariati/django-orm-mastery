#the docker compose file version
version: '3.7'


services:

  web-dev:
    image: dj-orm-web-dev
    container_name: dj-orm-web-dev-cnt
    env_file: .env/.env.dev
    build:
      context: . 
      dockerfile: ./compose/develop/django/Dockerfile
    ports:
      - '8000:8000'
    volumes:
      - '.:/app'
#    command: python manage.py runserver 0.0.0.0:8000
    command: /start
    depends_on:
      - redis
      - db
    networks:
      - dj-orm-net-dev

  db:
    image: postgres:13.0-alpine
    container_name: dj-orm-db-postgres-cnt
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=hello_django
      - POSTGRES_PASSWORD=hello_django
      - POSTGRES_DB=hello_django_dev
    networks:
      - dj-orm-net-dev
  
  pgadmin:
    container_name: dj-orm-pga_ctn
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-admin@admin.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-1234}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin-v:/var/lib/pgadmin
      - pgadmin-backup-sql:/home/pgadmin/
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    networks:
      - dj-orm-net-dev
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: dj-orm-db-redis-cnt
    networks:
      - dj-orm-net-dev


volumes:
  postgres_data_dev:
  pgadmin-v:
  pgadmin-backup-sql:


networks:
  dj-orm-net-dev:
    driver: bridge